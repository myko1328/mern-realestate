paths:
  /api/v1/listing/get:
    get:
      summary: Get all real estate listings
      description: Get all real estate listings
      operationId: get
      tags:
        - Listings
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of listings to return
          required: false
        - in: query
          name: startIndex
          schema:
            type: integer
          description: Number of listings to skip for pagination
          required: false
        - in: query
          name: offer
          schema:
            type: boolean
          description: Filter by offer type
          required: false
        - in: query
          name: furnished
          schema:
            type: boolean
          description: Filter by furnished status
          required: false
        - in: query
          name: parking
          schema:
            type: boolean
          description: Filter by parking availability
          required: false
        - in: query
          name: type
          schema:
            type: string
          description: Filter by listing type (sale, rent)
          required: false
        - in: query
          name: searchTerm
          schema:
            type: string
          description: Search term for listing names
          required: false
        - in: query
          name: sort
          schema:
            type: string
          description: Sort field
          required: false
        - in: query
          name: order
          schema:
            type: string
          description: Sort order (asc, desc)
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The listing ID.
                    name:
                      type: string
                      description: The name of the listing.
                    price:
                      type: number
                      description: The price of the listing.
        "400":
          $ref: "#/components/responses/BadRequestError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/v1/listing/get/{id}:
    get:
      summary: Get a single real estate listing by ID
      description: Retrieves detailed information about a specific real estate listing.
      operationId: getListing
      tags:
        - Listings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the listing to retrieve.
      responses:
        "200":
          description: A single real estate listing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: The listing ID.
                  name:
                    type: string
                    description: The name of the listing.
                  description:
                    type: string
                    description: The description of the listing.
                  address:
                    type: string
                    description: The address of the listing.
                  regularPrice:
                    type: number
                    description: The regular price of the listing.
                  discountPrice:
                    type: number
                    description: The discounted price of the listing, if any.
                  bathrooms:
                    type: integer
                    description: The number of bathrooms in the listing.
                  bedrooms:
                    type: integer
                    description: The number of bedrooms in the listing.
                  furnished:
                    type: boolean
                    description: Whether the listing is furnished.
                  parking:
                    type: boolean
                    description: Whether the listing includes parking.
                  type:
                    type: string
                    description: The type of listing, e.g., rent or sale.
                  offer:
                    type: boolean
                    description: Whether the listing is on offer.
                  imageUrls:
                    type: array
                    items:
                      type: string
                    description: URLs to images of the listing.
                  userRef:
                    type: string
                    description: Reference ID of the user who posted the listing.
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the listing was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: The date and time when the listing was last updated.
                  __v:
                    type: integer
                    description: Version number of the listing.
  /api/v1/listing/update/{id}:
    post:
      summary: Update a listing
      description: Updates the details of an existing listing. Requires authentication.
      operationId: updateListing
      security:
        - cookieAuth: []
      tags:
        - Listings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the listing to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: string
                regularPrice:
                  type: number
                discountPrice:
                  type: number
                bathrooms:
                  type: integer
                bedrooms:
                  type: integer
                furnished:
                  type: boolean
                parking:
                  type: boolean
                type:
                  type: string
                offer:
                  type: boolean
                imageUrls:
                  type: array
                  items:
                    type: string
                userRef:
                  type: string
              example:
                name: "Updated Listing Name"
                description: "Updated description here."
                address: "Updated Address"
                regularPrice: 500
                discountPrice: 450
                bathrooms: 2
                bedrooms: 3
                furnished: true
                parking: true
                type: "rent"
                offer: true
                imageUrls:
                  - "https://example.com/image1.jpg"
      responses:
        "200":
          description: The listing was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  address:
                    type: string
                  regularPrice:
                    type: number
                  discountPrice:
                    type: number
                  bathrooms:
                    type: integer
                  bedrooms:
                    type: integer
                  furnished:
                    type: boolean
                  parking:
                    type: boolean
                  type:
                    type: string
                  offer:
                    type: boolean
                  imageUrls:
                    type: array
                    items:
                      type: string
                  userRef:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  __v:
                    type: integer
        "401":
          description: Unauthorized - No token provided or token is invalid.
        "403":
          description: Forbidden - Token is valid but does not have permission to perform this action.
        "404":
          description: Listing not found - The ID provided does not match any listings.
  /api/v1/listing/delete/{id}:
    delete:
      summary: Delete a listing
      description: Deletes a specific listing. Requires authentication and user must be the owner of the listing.
      operationId: deleteListing
      tags:
        - Listings
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the listing to delete.
      responses:
        "200":
          description: Listing has been deleted.
          content:
            application/json:
              schema:
                type: string
                example: Listing has been deleted!
        "401":
          description: Unauthorized - No token provided, token is invalid, or user is not the owner of the listing.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
        "404":
          description: Listing not found - The ID provided does not match any listings.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  /api/v1/listing/create:
    post:
      summary: Create a new listing
      description: Creates a new real estate listing. Requires authentication.
      operationId: createListing
      tags:
        - Listings
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - address
                - regularPrice
                - discountPrice
                - bathrooms
                - bedrooms
                - furnished
                - parking
                - type
                - offer
                - imageUrls
                - userRef
              properties:
                name:
                  type: string
                description:
                  type: string
                address:
                  type: string
                regularPrice:
                  type: number
                discountPrice:
                  type: number
                bathrooms:
                  type: integer
                bedrooms:
                  type: integer
                furnished:
                  type: boolean
                parking:
                  type: boolean
                type:
                  type: string
                offer:
                  type: boolean
                imageUrls:
                  type: array
                  items:
                    type: string
                userRef:
                  type: string
              example:
                name: "test"
                description: "test"
                address: "test"
                regularPrice: 500
                discountPrice: 500
                bathrooms: 5
                bedrooms: 5
                furnished: true
                parking: true
                type: "rent"
                offer: true
                imageUrls:
                  - "https://firebasestorage.googleapis.com/v0/b/mern-estate-cd7da.appspot.com/o/1708210646755Screenshot%202022-06-21%20145750.png?alt=media&token=580150ce-cd67-45a5-a01e-5893ba612c54"
                userRef: "65d13df1219e4c435df8e74f"
      responses:
        "201":
          description: Listing created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  address:
                    type: string
                  regularPrice:
                    type: number
                  discountPrice:
                    type: number
                  bathrooms:
                    type: integer
                  bedrooms:
                    type: integer
                  furnished:
                    type: boolean
                  parking:
                    type: boolean
                  type:
                    type: string
                  offer:
                    type: boolean
                  imageUrls:
                    type: array
                    items:
                      type: string
                  userRef:
                    type: string
                  _id:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  __v:
                    type: integer
        "401":
          description: Unauthorized - No token provided or token is invalid.
        "403":
          description: Forbidden - Token is valid but does not have permission to perform this action.
